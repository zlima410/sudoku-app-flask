{"ast":null,"code":"var _jsxFileName = \"/Users/zlima/repos/sudoku-app-flask/sudoku-app-front/src/components/SudokuBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SudokuBoard = () => {\n  _s();\n  // Initialize an empty 9x9 board\n  const [board, setBoard] = useState(Array(9).fill().map(() => Array(9).fill(\"\")));\n  const handleChange = (row, col, value) => {\n    const newBoard = [...board];\n    newBoard[row][col] = value;\n    setBoard(newBoard);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sudoku-board\",\n    children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        maxLength: \"1\",\n        value: cell,\n        onChange: e => handleChange(rowIndex, colIndex, e.target.value)\n      }, `${rowIndex}-${colIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(SudokuBoard, \"pltz/7f63gHUc3BRzjcCyt9vtTI=\");\n_c = SudokuBoard;\nexport default SudokuBoard;\nvar _c;\n$RefreshReg$(_c, \"SudokuBoard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SudokuBoard","_s","board","setBoard","Array","fill","map","handleChange","row","col","value","newBoard","className","children","rowIndex","cell","colIndex","type","maxLength","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zlima/repos/sudoku-app-flask/sudoku-app-front/src/components/SudokuBoard.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst SudokuBoard = () => {\n  // Initialize an empty 9x9 board\n  const [board, setBoard] = useState(\n    Array(9)\n      .fill()\n      .map(() => Array(9).fill(\"\"))\n  );\n\n  const handleChange = (row, col, value) => {\n    const newBoard = [...board];\n    newBoard[row][col] = value;\n    setBoard(newBoard);\n  };\n\n  return (\n    <div className=\"sudoku-board\">\n      {board.map((row, rowIndex) => (\n        <div key={rowIndex} className=\"row\">\n          {row.map((cell, colIndex) => (\n            <input\n              key={`${rowIndex}-${colIndex}`}\n              type=\"text\"\n              maxLength=\"1\"\n              value={cell}\n              onChange={(e) => handleChange(rowIndex, colIndex, e.target.value)}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SudokuBoard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAChCO,KAAK,CAAC,CAAC,CAAC,CACLC,IAAI,CAAC,CAAC,CACNC,GAAG,CAAC,MAAMF,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAChC,CAAC;EAED,MAAME,YAAY,GAAGA,CAACC,GAAG,EAAEC,GAAG,EAAEC,KAAK,KAAK;IACxC,MAAMC,QAAQ,GAAG,CAAC,GAAGT,KAAK,CAAC;IAC3BS,QAAQ,CAACH,GAAG,CAAC,CAACC,GAAG,CAAC,GAAGC,KAAK;IAC1BP,QAAQ,CAACQ,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEZ,OAAA;IAAKa,SAAS,EAAC,cAAc;IAAAC,QAAA,EAC1BX,KAAK,CAACI,GAAG,CAAC,CAACE,GAAG,EAAEM,QAAQ,kBACvBf,OAAA;MAAoBa,SAAS,EAAC,KAAK;MAAAC,QAAA,EAChCL,GAAG,CAACF,GAAG,CAAC,CAACS,IAAI,EAAEC,QAAQ,kBACtBjB,OAAA;QAEEkB,IAAI,EAAC,MAAM;QACXC,SAAS,EAAC,GAAG;QACbR,KAAK,EAAEK,IAAK;QACZI,QAAQ,EAAGC,CAAC,IAAKb,YAAY,CAACO,QAAQ,EAAEE,QAAQ,EAAEI,CAAC,CAACC,MAAM,CAACX,KAAK;MAAE,GAJ5D,GAAEI,QAAS,IAAGE,QAAS,EAAC;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAK/B,CACF;IAAC,GATMX,QAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUb,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACxB,EAAA,CA/BID,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AAiCjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}